#!/bin/bash

# User interface for APK vulnerability analysis tool
# Dependencies: apktool, jadx, MobSF, and JQ

# Define colors for the output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

# Check for pip
if ! command -v pip &> /dev/null
then
    echo -e "${RED}pip is not installed. Please install it and try again.${NC}"
    exit 1
fi

# Install dependencies
echo -e "${YELLOW}Installing dependencies...${NC}"
if ! pip install apktool jadx Mobile-Security-Framework-MobSF jq; then
    echo -e "${RED}Failed to install dependencies.${NC}"
    exit 1
fi

# Welcome message
echo -e "${GREEN}Welcome to the APK vulnerability analysis tool.${NC}"
read -p "Please enter the path to the APK file you want to analyze: " APK_PATH

# Check if the APK file exists
if [ ! -f "$APK_PATH" ]
then
    echo -e "${RED}The specified APK file does not exist. Please check the file path and try again.${NC}"
    exit 1
fi

# Choose the analysis method
echo -e "${YELLOW}Please choose the analysis method:${NC}"
PS3="Select a method: "
options=("Basic Analysis" "Advanced Analysis" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Basic Analysis")
            # Unpack the APK
            echo -e "${YELLOW}Unpacking the APK...${NC}"
            if ! apktool d -f "$APK_PATH" -o apk_unpack; then
                echo -e "${RED}Failed to unpack the APK.${NC}"
                exit 1
            fi

            # Export the source code from the APK
            echo -e "${YELLOW}Exporting the source code from the APK...${NC}"
            if ! jadx -d source_code -j 1 apk_unpack; then
                echo -e "${RED}Failed to export the source code from the APK.${NC}"
                exit 1
            fi

            # Analyze the APK with MobSF
            echo -e "${YELLOW}Analyzing the APK with MobSF...${NC}"
            if ! mobsf -f "$APK_PATH" -r report.html -j report.json; then
                echo -e "${RED}Failed to analyze the APK with MobSF.${NC}"
                exit 1
            fi

            # Extract the vulnerabilities from the report
            echo -e "${YELLOW}Extracting the vulnerabilities from the report...${NC}"
            if ! jq '.["Vulnerabilities"] | keys[] as $k | "\($k): \(.[$k]["Title"]) - Severity: \(.[$k]["Severity"]) - Description: \(.[$k]["Description"]) - Remediation: \(.[$k]["Remediation"]) "' report.json; then
                echo -e "${RED}Failed to extract the vulnerabilities from the report.${NC}"
                exit 1
            fi

            # Clean up
            echo -e "${YELLOW}Cleaning up...${NC}"
            rm -rf apk_unpack report.html report.json

            echo -e "${GREEN}Basic analysis complete.${NC}"
            break
            ;;
        "Advanced Analysis")
            # Unpack the APK
            echo -e "${YELLOW}Unpacking the APK..."
if ! apktool d -f "$APK_PATH" -o apk_unpack; then
echo -e "${RED}Failed to unpack the APK.${NC}"
exit 1
fi
        # Export the source code from the APK
        echo -e "${YELLOW}Exporting the source code from the APK...${NC}"
        if ! jadx -d source_code -j 1 apk_unpack; then
            echo -e "${RED}Failed to export the source code from the APK.${NC}"
            exit 1
        fi

        # Analyze the APK with MobSF
        echo -e "${YELLOW}Analyzing the APK with MobSF...${NC}"
        if ! mobsf -f "$APK_PATH" -r report.html -j report.json; then
            echo -e "${RED}Failed to analyze the APK with MobSF.${NC}"
            exit 1
        fi

        # Extract the vulnerabilities from the report
        echo -e "${YELLOW}Extracting the vulnerabilities from the report...${NC}"
        if ! jq '.["Vulnerabilities"] | keys[] as $k | "\($k): \(.[$k]["Title"]) - Severity: \(.[$k]["Severity"]) - Description: \(.[$k]["Description"]) - Remediation: \(.[$k]["Remediation"]) "' report.json; then
            echo -e "${RED}Failed to extract the vulnerabilities from the report.${NC}"
            exit 1
        fi

        # Extract information about the app's network behavior
        echo -e "${YELLOW}Extracting information about the app's network behavior...${NC}"
        if ! jq '.["Network Behavior"]' report.json; then
            echo -e "${RED}Failed to extract information about the app's network behavior.${NC}"
            exit 1
        fi

        # Extract information about the app's file system access
        echo -e "${YELLOW}Extracting information about the app's file system access...${NC}"
        if ! jq '.["File System Access"]' report.json; then
            echo -e "${RED}Failed to extract information about the app's file system access.${NC}"
            exit 1
        fi

        # Clean up
        echo -e "${YELLOW}Cleaning up...${NC}"
        rm -rf apk_unpack report.html report.json

        echo -e "${GREEN}Advanced analysis complete.${NC}"
        break
        ;;
    "Quit")
        echo -e "${YELLOW}Exiting the tool...${NC}"
        exit 0
        ;;
    *) 
        echo -e "${RED}Invalid option. Please choose a valid option.${NC}"
        ;;
esac

